version: "3"

services:
  dbserver:
    platform: linux/x86_64
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: code_template
      # So you don't have to use root, but you can if you like
      # MYSQL_USER: root
      # You can use whatever password you like
      MYSQL_ROOT_PASSWORD: password
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - "3306:3306"
    expose:
      # Opens port 3306 on the container
      - "3306"

  code_template:
    image: code_template
    build: .
    ports:
      - 8000:5000
    environment:
      - SECRET_KEY=b'i\x03\xa0E\x88j\xd3\xbc\xd7\xc8\xda\xd0\x9f\xbd\x16\x80\x96<\x89\xc5dv\xcc|'
      - FLASK_ENV=development
      - FLASK_DEBUG=true
      - FLASK_CONFIG=default
      - DATABASE_URL=mysql+pymysql://root:password@dbserver/code_template
    links:
      - dbserver
    depends_on:
      - dbserver

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - TERM=arm64
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-polystat-panel
    ports:
      - '3000:3000'
    volumes:
      - 'grafana_storage:/var/lib/grafana'

  template-mysql-exporter:
    image: prom/mysqld-exporter
    container_name: template-mysql-exporter
    ports:
      - '9104:9104'
    volumes:
      - ./infra/.my.cnf:/.my.cnf
    environment:
      - DATA_SOURCE_NAME=root:password@(dbsever:3306)/code_template
      - collect.info_schema.tablestats=true
      - collect.info_schema.userstats=true
      - collect.info_schema.query_response_time=true
      - collect.auto_increment.columns=true
      - collect.binlog_size=true
      - collect.perf_schema.eventsstatements=true
      - collect.perf_schema.eventswaits=true
      - collect.perf_schema.file_events=true
      - collect.perf_schema.indexiowaits=true
      - collect.perf_schema.tableiowaits=true
      - collect.perf_schema.tablelocks=true
    links:
      - dbserver
    depends_on:
     - dbserver

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - '9100:9100'
    depends_on:
     - dbserver
    # networks:
    #   - localprom

  prometheus:
    image: prom/prometheus:latest
    container_name: template-prometheus
    restart: unless-stopped
    volumes:
      - ./infra/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - '9090:9090'
    depends_on:
     - dbserver
    # networks:
    #   - localprom

volumes:
  grafana_storage: {}
  prometheus_data: {}
  # unittest: #for running tests
  #   build:
  #     context: .
  #     target: unittest
  #   ports:
  #     - 8008:5000
  #   links:
  #     - code_template
  #   networks:
  #     - net
networks:
  net:
    driver: bridge
